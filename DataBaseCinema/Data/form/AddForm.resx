<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAgHyMAIB8jACAfIwAgHyMBIB8jAyAfIwEgHyMAIB8jHCAfI2kgHyOrIB4j4yAk
        I9AwvDG/Ii8k/yAbI/kgICPeIB8jryAfI2wgHyMeIB8jACAfIwEgHyMDIB8jASAfIwAgHyMAIB8jAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIB8jACAfIwAgHyMAIB8jAiAfIwIgHyMAIB8jLSAfI6EgHyPvIB8j/yAf
        I/0gHiP/Hxoj2DC7ML8iMCT/IBsj/iAgI/8gHyP+IB8j/yAfI/AgHyOkIB8jMCAfIwAgHyMCIB8jAiAf
        IwAgHyMAIB8jAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwMgHyMAIB8jDCAfI5MgHyP8IB8j/yAf
        I/8gHyPxICAjrh8ZIm4tmS7DMcAx5yEsJP8gHCP/ICAjnyAfI6EgHyPyIB8j/yAfI/4gICP9ICAjliAd
        Iw0gHCMAIB8jAyAfIwAgHyMAIB8jAAAAAAAgHyMAIB8jACAfIwAgHyMDIB8jACAfIyogHyPXIB8j/yAf
        I/8gHyPeIB8jXiAgIw8gISMYIBwjTCdlKZYwvDHGIi8k/yAdI/8gIiN/IB8jECAfIxAgHyNbIB8j2x8Z
        I/8gHiP/ICAj2SAeIysgHiMAIB8jAyAfIwAgHyMAIB8jABwAIAAdACAAICIjAyAfIwAgHyM5IB8j7iAf
        I/8gHyP+IB8jfiAfIwAgHyNEIB8juyAfI/ggHyP/HxUi1DC3ML4hJyT/HxIi/CAbI/8gICP8ICEjwiAg
        I0o+/zwAJEgnnSAjI/8gGiP/ICEj7yAeIzogHiMAIB8jAyAfIwAgHyMAM9UzASuILAUgFyMAIB4jLCAf
        I+wgISP/ICAj8iAeIzkgHyMVIB8jxCAfI/8gHyP9ICAj/x8ZIu4jQCbJMs0y2ydfKfQkRCb6IjEl/x8Y
        Iv8fFiL+ICEj/yAbI8UuqS9yLZwuzSAkI/0fGiP/ICAj7iAeIy0gHyMAIB8jAiAfIwAobioCISUjACAf
        IwwgHyPRICAj/x8VIukbAB8eICMjQSAfI/kgHyP/IB8j/yAfI7cgIyNBEgAYCSuFLDQuoi6yLqgvojC2
        MJ0xvzGvLZouzSVTJ/cfGSL+IBwj/x4JIestoC6jMLkw4CEkI/sgHSP/ICAj1CAfIw4gHyMAIB8jAS6p
        LxQ04zSAJlUozx8YIv8fGiP9LZktvyhsKn8fEyL3ICIj/yAfI+ogHyNAHxojBCAgI2ogIyPKIB0j7x8U
        IvIfFCL1Hxgi6iAjI8wlUCeWMcgyei2fLtMhLCT/JU8n8DC7MOYuoi6cLJItrx8ZI/YgICP/IB8jkyAf
        IwAgHyMDM9kzmi+vL/ggIyP9HxQi/idiKd004zTKLqMu1yEtJP8fFyL/ICIj5iAeI2wgISPkIB4j/x8T
        Iv4fFiL/ICEj/yAhI/8fGSL/HxMi/h8XIv8fFyLlKG0qfzHHMbgxwjHrJU0n5h8SIvsobyo+IB8jfSAf
        I/8gHyP6IB8jMiAfIwA03DPPJlko7x8RIv8hJSTkMswyzCRDJvAmWSh8ML0xwiEtJP8fFiL8ISQj/x8X
        Iv4gISP9KGgp9i2gLt8vsTDGL68vuS2ZLsIoaSn0ISgk/h8aI/8fFiL+JEgmjjLJMrEhLST/IBwj/yAc
        I8IgHSMPIB8j2CAfI/8gHyOfIB8jADC4MNMhKyT+HxEi/yl4K8QtnC7gHxYi/x8WIvUoaSl9MLowwSIv
        JP8eDCH6Iz4m9jC9MewwtjDMJ14ovyM6JcgiNSXCJU0nqi6rL4ovsC+2I0Em/B8YIv4fFiL8KHEqhi2f
        LtYfGCL/ICEj/yAfI08gHyNgIB8j/yAfI+sgHyMgKGwqtSAeI/8gHiPyMLswkSIvJMsgHCP/ICIj/h8V
        IvYoaSl5L68vvSVQJ/0yzzLgKXMq5R8SIvUfFSL/IBsj/yAbI/4fFiL/HQYh9iqDLKc05DTRI0Am/B8Z
        Iv8fFSLaMcgyjiVUKPwfFSL/ICIjvSAfIxUgHyPvIB8j/yAfI2ogISOsIBoj/yM5JdAwujC8IB4j+iAf
        I/4gHyPtICIj/x8VIvMmWyiLNew10ylyKvgeDiL+ICEj/yAhI+AgISOJISckiyErJPImVijvMb8x7yp8
        K6YvsjDBISwk/x8WIv8mViiYLZouzh8YIv8gICP8IB8jHyAfI64gHyP/IB8jrSAhI9gfFyL/J14pti2Y
        LdAfGCL/ICAj6yAfIzsgHyPkIB8j/yAfI5MqhCxBIB8j/yAfI/8gICOmLqYvAR4OIjEeDiIxMcUxmDLM
        MtwlTSfrHQUh8i6qL4cnXyjcHxUi/yAiI8YxvjGqIi8k/yAbI/8gISNJIB8jbCAfI/8gHyPaICIj8x8T
        Iv8qgCuvKn0r5h8SIv8gIiPNIB8jECAfI+ggHyP/IB8jyR8XIsggHyP/IB8j4iEnJAsgGyOjISok/yEo
        JP8gHiOsMcQxpCI0Jf8gGyP/ISQjfSEoJEEgICP/HxUi5DC4MKEkSSf/HxYi/yAiI5MgHyN5IB8j/yAf
        I/UgISP/HxMi/yyOLacobyrrHxMi/yAiI7IgHyMfIB8j/yAfI/8gHyP/ICAj+yAfI/8gHyOUISQjNB8Z
        IvIwvDHFMcMx9CAcI/Ysli2nKG0q8B8SIv8gIyOpIB4jIiAhI/8fEyLzLqsvqiZXKPsfFCL/ICEj/iAf
        I/8gHyP/IB8j/yAhI/8fEyL/LI4tqChvKuofEyL/ICIjtiAfIw0gHyOFIB8jgiAfI4IgISPWIB8j/yAf
        I5MgIyMyIBsj9S+rL38wvDHCISgk/yl3K2ojNiWeIBwj/yAgI68gICMlICEj/x8TIvIvrS+uJlco/B8U
        Iv8gISP4IB8j9iAfI/8gHyP/ICEj8h8VIv8peCuhKnwr4h8TIv8gIiPRIB8jAiAfIzkgHiNJIjclCR4Q
        InUgHiP/ICAj4iAdIwsgHyOfIBoj+h8ZIvsgHCOlFwAbBSAdI90gISP/ICAj8iAfI60gICP/Hxgi6TC6
        MK4kRib6Hxci/yAiI34gHyNdIB8j/yAfI/QgISPVHxgi/yZTKKgsly3SHxci/yAhI/IgHyMYIB8jwiAg
        I/8fGSKWLJUtUyElJP8gHSP/ICEjrR8YIgIgJCMwISQjMiM8JQIgISOoICIj/x8VIvwfGSL+ICIj/iAb
        I/8iLyTZMcExziEqJP0gHCP/ICEjRyAfI28gHyP/IB8j2iAgI6YgHiP/ISgkvDC4MLQhKCT/IB0j/yAg
        I0sgHyNiICAj/x8WIu4uqC+DKnsr5h4QIv8gHSP/ICIj5SAjI5IgIyORICIj4yAfI/8eDiL+KGop9CRK
        J/sfEyL7Hxci/yl0KsgtnS7fHxUi/yAhI/sgHyMcIB8jryAfI/8gHyOtIB8jZCAhI/8fFCLmMLowkiVP
        J/cfFSL/ICIjvSAfIw4gHyPhIB8j/x8XIscy0DJ9Knsr6CAhI/8fEyL+HxYi/x8UIv8fEiL+IBwj/yl4
        K/Mz1zPVMcgytyREJv8dBSHXMs4ytCVPJ/ofFiL/ICEjuSAgIxUgHyPwIB8j/yAfI2ogHyMbICAj6R8Y
        Iv8mWiiULZwu1R8XIv8gISP/IB8jUCAfI0MgHyP/IB8j/x8ZI8supS99MLkwvChwKusmVyj1Jlwo9yl4
        K+8wuTDWMLkwyyIzJfUiNCWXL7EwtS6oL9sslS3ZHxci/iAgI/8hLCRPIB4jYCAfI/8gHyPrIB8jICAf
        IwAgHyOaICAj/x8VItMyzjKNJU0n/R8TIv8gIiPvIB0jGyAfI2IgHyP/ICAj/x8XIvIhKiSsMcIxmzHH
        MtcupS+xLJItuSVMJ8ofFiLxIBsj/x8UIvoupi/DMsky7CEnJPsfGSL/Ijcl3CuGLB0gHCPWIB8j/yAf
        I6AgHyMAIB8jACAfIy0gICP5IBsj/yM9JpwxwjG7ISck/x8aI/8gISPhIBwjGCAfIzsgHyPmICMj/x4O
        Iv0rhSyrKGwq7x0EIfYfFCL9Hxgi/iAiI/8fFSLcLZkuxzC8MeciLiT2Hxgi/yEnJP8qdSs7IBsjeyAf
        I/8gHyP6IB8jMyAfIwAgHyMDIB8jACAfI40gISP/HxUi9Cp8K4Eupi/XIB0j/x8aI/8gIiPxIB8jSCAf
        Iw8gISPtHxQi/yuNLaUobyrvHxUi/yEkI/kgISPDICAjZUP/QAAnXihpISgk+x8YIv4gISP/IB8jQh8V
        IjogHyP+IB8j/yAfI5MgHyMAIB8jAyAfIwEgHyMAIB8jCyAfI84gISP/HxUi5yyULXQupC7OISck/x8T
        Iv0gISP/ICIjxCAiI+4fEyL/K40tqyhxKu8fEyL/ICIjvyAfIwYgHyNEICAjuh8ZI/8gHSP/ICEj+CAe
        Iz8gHCMmIB8j8CAfI/8gHyPTIB8jDSAfIwAgHyMBIB8jACAfIwIgHyMAIB8jKCAfI+kgISP/HxIi5ip8
        K4MxwTG6JU8n+h8YIv8fFSL+ICEj/x8UIv4skC2vKXIq9B8UIv8gIiPvIB8j7SAfI/8gHyP9ICAj/yAg
        I8IgHSMUIB8jOiAfI/IgHyP/IB8j7CAfIy0gHyMAIB8jAiAfIwAgHyMAIB8jACAfIwMgHyMAIB8jNSAf
        I+sgISP/HxUi9SM9JqEyzjKOLZouzSVRJ/ogIyP9Hggh/iuJLLEnZinuHQYh/yAhI/4gHyP/IB8j+CAf
        I7cgHyNBIB8jACAfI4AgHyP+IB8j/yAfI+4gHyM5IB8jACAfIwMgHyMAIB8jACAfIwAgHyMAIB8jACAf
        IwMgHyMAIB8jJiAfI9MgISP/IBsj/x8UItYmWCiWMLswmjC4MJ0rjSzMMcYx2i2eLuYnZCnsIjAkdR8Z
        IkAgIyMXIB8jECAfI2IgHyPfIB8j/yAfI/8gHyPWIB8jKiAfIwAgHyMDIB8jACAfIwAgHyMAAAAAACAf
        IwAgHyMAIB8jACAfIwMgHiMAIB8jCiAfI44gICP6ICEj/x8ZIv8fEyLnISskwiZXKKooaCmeK4YsqSuN
        LZ8hKCRRIB0jciAfI7MgHyPzIB8j/yAfI/8gHyP7IB8jkiAfIwsgHyMAIB8jAyAfIwAgHyMAIB8jAAAA
        AAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwIgHyMDIB8jACAfIykgHyOcICAj7SAhI/8gHSP+Hxgi/x8X
        Iv8fFCL+HxQi/iAeI/8gHyP/IB8j/iAfI/8gHyPtIB8jnyAfIywgHyMAIB8jAiAfIwIgHyMAIB8jACAf
        IwAAAAAAAAAAAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwEgHyMDICAjASAcIwAgHSMYICMjZiAj
        I6wgICPXICEj8yAhI/8gISP+IB8j8SAfI9YgHyOpIB8jZiAfIxogHyMAIB8jASAfIwMgHyMBIB8jACAf
        IwAgHyMAAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAAAFVBAAgogAAAFQAAAAgAAAAIAAAABAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABQAAIAkAA
        AAKgAAAFUAACCqgAABXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>